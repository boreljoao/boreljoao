document.addEventListener('DOMContentLoaded', () => {
    // Esconder loader quando a página carregar
    window.addEventListener('load', () => {
        const loader = document.querySelector('.loader');
        if (loader) {
            loader.style.opacity = '0';
            loader.style.visibility = 'hidden';
            
            // Adicionar classe ao body após animação inicial
            setTimeout(() => {
                document.body.classList.add('body--active');
            }, 500);
        }
    });
    const cursor = document.querySelector('.cursor');
    const cursorFollower = document.querySelector('.cursor-follower');
    
    if (cursor && cursorFollower) {
        document.addEventListener('mousemove', (e) => {
            cursor.style.left = e.clientX + 'px';
            cursor.style.top = e.clientY + 'px';
            
            setTimeout(() => {
                cursorFollower.style.left = e.clientX + 'px';
                cursorFollower.style.top = e.clientY + 'px';
            }, 100);
        });
        
        // Efeito em links e elementos interativos
        const interactiveElements = document.querySelectorAll('a, button, .service-card, .skill-item');
        
        interactiveElements.forEach(el => {
            el.addEventListener('mouseenter', () => {
                cursor.style.transform = 'translate(-50%, -50%) scale(1.5)';
                cursor.style.opacity = '0.5';
                cursorFollower.style.transform = 'translate(-50%, -50%) scale(1.5)';
            });
            
            el.addEventListener('mouseleave', () => {
                cursor.style.transform = 'translate(-50%, -50%) scale(1)';
                cursor.style.opacity = '1';
                cursorFollower.style.transform = 'translate(-50%, -50%) scale(1)';
            });
        });
    }
    // Configuração do ScrollReveal
    if (typeof ScrollReveal !== 'undefined') {
        const sr = ScrollReveal({
            origin: 'top',
            distance: '50px',
            duration: 1000,
            delay: 200,
            easing: 'cubic-bezier(0.5, 0, 0, 1)',
            reset: false
        });

        sr.reveal('.sidebar', { 
            origin: 'left',
            delay: 300
        });
        
        sr.reveal('.navigation__link', { 
            interval: 150,
            origin: 'right'
        });
    }
    
    // Observador de elementos para animações
    const animateOnScroll = () => {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate');
                    observer.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.1
        });

        document.querySelectorAll('.navigation__link').forEach(link => {
            observer.observe(link);
        });
    };

    // Verificar suporte a IntersectionObserver
    if ('IntersectionObserver' in window) {
        animateOnScroll();
    }

    // Suave transição entre páginas
    document.querySelectorAll('a[href^="/"]').forEach(link => {
        link.addEventListener('click', (e) => {
            if (!link.hash) {
                e.preventDefault();
                document.body.style.opacity = '0';
                
                setTimeout(() => {
                    window.location.href = link.href;
                }, 500);
            }
        });
    });

    // Otimização de performance para imagens
    if ('loading' in HTMLImageElement.prototype) {
        const images = document.querySelectorAll('img[loading="lazy"]');
        images.forEach(img => {
            img.src = img.dataset.src;
        });
    }



});

// Atualizar ano do copyright automaticamente
document.getElementById('current-year').textContent = new Date().getFullYear();

// Efeito hover na logo
const logoLink = document.querySelector('.logo-link');
if (logoLink) {
    logoLink.addEventListener('mouseenter', () => {
        logoLink.style.transform = 'rotate(5deg)';
    });
    
    logoLink.addEventListener('mouseleave', () => {
        logoLink.style.transform = 'rotate(0)';
    });
}

